{"version":3,"sources":["DetailsList/DetailsList.jsx","api/apiIP.js","FindIP/FindIP.jsx","App.js","reportWebVitals.js","index.js"],"names":["DetailsList","details","error","className","Object","keys","map","key","boolToString","getIP","ip","a","fetch","response","json","peopleAbout","FindIP","useState","setIp","setDetails","loading","setLoading","onSubmit","event","preventDefault","then","type","name","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAGaA,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAE3B,OACEA,EAAQC,MACJ,mBAAGC,UAAU,UAAb,kEACCC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,GAC3B,GAA4B,kBAAjBN,EAAQM,GACjB,OACE,+BACE,uBAAMJ,UAAS,2BAAsBF,EAAQM,IAA7C,UAAuDA,EAAvD,OACA,uBAAMJ,UAAS,cAAf,cAAkCF,EAAQM,GAA1C,SAFOA,GAKb,GAA4B,kBAAjBN,EAAQM,GACjB,OACE,+BACE,uBAAMJ,UAAS,mBAAf,UAAsCI,EAAtC,OACA,sBAAMJ,UAAS,cAAf,SAAiCF,EAAQM,OAFlCA,GAKb,GAA4B,mBAAjBN,EAAQM,GAAoB,CACrC,IAAIC,EAAeP,EAAQM,GAAO,GAClC,OACA,+BACE,uBAAMJ,UAAS,oBAAf,UAAuCI,EAAvC,OACA,sBAAMJ,UAAS,eAAf,SAAkCK,MAF3BD,GAKX,OAAO,S,uBC/BFE,EAAK,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACIC,MAAM,oBAAD,OAAqBF,EAArB,WADT,cACbG,EADa,gBAEOA,EAASC,OAFhB,cAEbC,EAFa,yBAIZA,GAJY,2CAAH,sDCMLC,G,MAAS,WACpB,MAAoBC,mBAAS,IAA7B,mBAAOP,EAAP,KAAWQ,EAAX,KACA,EAA8BD,mBAAS,MAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAcA,OACE,qCACG,uBAAMC,SAdI,SAACC,GACdF,GAAW,GACXE,EAAMC,iBACFd,GACFD,EAAMC,GACLe,MAAK,SAACxB,GACLkB,EAAWlB,GACXoB,GAAW,OAOZ,UAEC,uBACElB,UAAU,cACVuB,KAAK,OACLC,KAAK,KACLC,YAAY,UACZC,MAAOnB,EACPoB,SAAU,SAAAP,GAAK,OAAIL,EAAMK,EAAMQ,OAAOF,UAGxC,wBACEH,KAAK,SACLvB,UAAU,eAFZ,uBAQDF,EACGmB,EACE,mBAAGjB,UAAU,UAAb,yBACA,oBAAIA,UAAU,OAAd,SAAqB,cAAC,EAAD,CAAaF,QAASA,MAC7C,mBAAGE,UAAU,UAAb,gFC5CG6B,G,MAAM,WACjB,OACE,qBAAK7B,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,SACf,oBAAIA,UAAU,QAAd,2BAEJ,cAAC,EAAD,WCAO8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.80330f5e.chunk.js","sourcesContent":["import React from 'react'\nimport './DetailsList.css'\n\nexport const DetailsList = ({details}) => {\n\n  return (\n    details.error\n      ? <p className=\"message\">Something went wrong üòû. Please try again.</p>\n      : (Object.keys(details).map((key) => {\n        if (typeof details[key] === 'string') {\n          return (\n            <li key={key}>\n              <span className={`name name-${typeof details[key]}` }>{key}:</span>\n              <span className={`text string`}>\"{details[key]}\"</span> \n          </li>\n          )}\n        if (typeof details[key] === 'number') {\n          return (\n            <li key={key}>\n              <span className={`name name-number`}>{key}:</span>\n              <span className={`text number`}>{details[key]}</span> \n          </li>\n          )}\n        if (typeof details[key] === 'boolean') {\n          let boolToString = details[key] + \"\";\n          return (\n          <li key={key}>\n            <span className={`name name-boolean`}>{key}:</span>\n            <span className={`text boolean`}>{boolToString}</span> \n        </li>\n        )}\n        return null;\n      }))\n      \n  )\n}\n","export const getIP = async(ip) => {\n  const response = await fetch(`https://ipapi.co/${ip}/json/`);\n  const peopleAbout = await response.json();\n\n  return peopleAbout;\n};\n","import React, { useState } from 'react';\nimport { DetailsList } from '../DetailsList/DetailsList';\n\nimport { getIP } from '../api/apiIP';\nimport \"./FindIP.css\"\n\nexport const FindIP = () => {\n  const [ip, setIp] = useState('');\n  const [details, setDetails] = useState(null);\n  const [loading, setLoading] = useState(true)\n\n  const findIp = (event) => {\n    setLoading(true)\n    event.preventDefault();\n    if (ip) {\n      getIP(ip)\n      .then((details) => {\n        setDetails(details);\n        setLoading(false)\n      })\n    }\n  }\n\n  return (\n    <>\n       <form onSubmit={findIp}>\n         \n        <input\n          className=\"searchInput\" \n          type=\"text\"\n          name=\"ip\"\n          placeholder=\"8.8.8.8\"\n          value={ip}\n          onChange={event => setIp(event.target.value)}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"searchButton\"\n        >\n          Search\n        </button>\n      </form>\n\n      {details\n        ? loading \n          ? <p className=\"message\">Loading ...</p>\n          : <ul className=\"list\"><DetailsList details={details} /></ul>\n        : <p className=\"message\">Enter IP and press ‚ÄúSearch‚Äù to get geolocation data</p>\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { FindIP } from './FindIP/FindIP';\nimport './App.css';\n\nexport const App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"page\">\n        <div className=\"nav\">\n            <div className=\"logo\"></div>\n            <h1 className=\"title\">Find My IP</h1>\n        </div>\n        <FindIP />\n      </div>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}